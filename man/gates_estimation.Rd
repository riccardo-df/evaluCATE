% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GATES.R
\name{gates_estimation}
\alias{gates_estimation}
\title{GATES Estimation}
\usage{
gates_estimation(Y, D, cates, pscore, mu, mu0, mu1, scores, n_groups = 5)
}
\arguments{
\item{Y}{Observed outcomes.}

\item{D}{Treatment indicator.}

\item{cates}{CATE predictions. Must be produced by a model estimated using different observations than those in \code{Y} and \code{D}.}

\item{pscore}{Propensity scores predictions. Must be produced by a model estimated using different observations than those in \code{Y} and \code{D} (unless the propensity score is known, in which case we provide the true values).}

\item{mu}{Conditional mean predictions. Must be produced by a model estimated using different observations than those in \code{Y} and \code{D}}

\item{mu0}{Control units' conditional mean predictions. Must be produced by a model estimated using different observations than those in \code{Y} and \code{D}}

\item{mu1}{Treated units' conditional mean predictions. Must be produced by a model estimated using different observations than those in \code{Y} and \code{D}}

\item{scores}{Estimated doubly-robust scores. Must be estimated via K-fold cross-fitting using the same observations as in \code{Y} and \code{D}.}

\item{n_groups}{Number of groups to be formed.}
}
\value{
A list of fitted models as \code{\link[estimatr]{lm_robust}} objects and a data frame with point estimates and standard errors for the nonparametric estimator.
}
\description{
Estimates the sorted group average treatment effects (GATES), with the groups formed by cutting the distribution of the estimated CATEs into K quantiles.
}
\details{
To estimate the GATES, the user must provide observations on the outcomes and the treatment status of units in 
the validation sample, as well as their estimated cates and nuisance functions. Be careful, as these estimates must be obtained using only observations from the training sample 
(see the example section below). Additionally, the user must provide doubly-robust scores estimated in the validation sample using K-fold cross fitting.\cr

Groups are constructed by cutting the distribution of \code{cates} into \code{n_groups} quantiles. If this leads to one or more groups composed of only treated or only control units, the function raises an error.\cr

The GATES are estimated using four different strategies: three involving fitting suitable linear models, and one nonparametric approach. Check the online 
\href{https://riccardo-df.github.io/evaluCATE/articles/evaluCATE-short-tutorial.html}{short tutorial} for details.\cr

For the linear models, standard errors are estimated using the Eicker-Huber-White estimator. These standard errors are then used to test three distinct hypotheses of effect heterogeneity: whether
all GATES are equal to each other, whether the largest and the smallest GATES are different from each other, and whether the differences in the GATES across all pairs of groups are zero.
For the last test, we adjust p-values to account for multiple hypotheses testing using Holm's procedure and report the median of the adjusted p-values. The nonparametric approach tests only the first
of these hypotheses. Check \href{https://riccardo-df.github.io/evaluCATE/articles/hypotheses-testing.html}{hypotheses testing vignette} for details.\cr

Each strategy based on linear models supports different model specifications 
that differ in additional and optional covariates that can be included in the regressions to reduce the estimation variance.
Check \href{https://riccardo-df.github.io/evaluCATE/articles/denoising.html}{denoising vignette} for details.
}
\examples{
\donttest{## Generate data.
set.seed(1986)

n <- 1000
k <- 2

X <- matrix(rnorm(n * k), ncol = k)
colnames(X) <- paste0("x", seq_len(k))
D <- rbinom(n, size = 1, prob = 0.5)
mu0 <- 0.5 * X[, 1]
mu1 <- 0.5 * X[, 1] + X[, 2]
Y <- mu0 + D * (mu1 - mu0) + rnorm(n)

## Sample split.
train_idx <- sample(c(TRUE, FALSE), length(Y), replace = TRUE)

X_tr <- X[train_idx, ]
X_val <- X[!train_idx, ]

D_tr <- D[train_idx]
D_val <- D[!train_idx]

Y_tr <- Y[train_idx]
Y_val <- Y[!train_idx]

## CATEs and nuisance functions estimation.
## We use only the training sample for estimation.
## We predict on the validation sample.
library(grf)

cates_forest <- causal_forest(X_tr, Y_tr, D_tr) 
mu_forest <- regression_forest(X_tr, Y_tr)
mu0_forest <- regression_forest(X_tr[D_tr == 0, ], Y_tr[D_tr == 0])
mu1_forest <- regression_forest(X_tr[D_tr == 1, ], Y_tr[D_tr == 1])

cates_val <- predict(cates_forest, X_val)$predictions 
mu_val <- predict(mu_forest, X_val)$predictions
mu0_val <- predict(mu0_forest, X_val)$predictions
mu1_val <- predict(mu1_forest, X_val)$predictions

## AIPW scores estimation.
## Cross-fitting on the validation sample.
library(aggTrees)
scores_val <- dr_scores(Y_val, D_val, X_val)

## GATEs estimation. Use default of five groups.
pscore_val <- rep(0.5, length(Y_val)) # We know true pscores.
gates_results <- gates_estimation(Y_val, D_val, cates_val, 
                                  pscore_val, mu_val, mu0_val, mu1_val, 
                                  scores_val)}

}
\seealso{
\code{\link{blp_estimation}}, \code{\link{toc_estimation}}, \code{\link{rate_estimation}}, \code{\link{test_parametric_gates}}
}
\author{
Riccardo Di Francesco
}
